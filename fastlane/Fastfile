fastlane_version "1.85.0"

ENV["SLACK_URL"] ||= "https://hooks.slack.com/services/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"

default_platform :ios

platform :ios do

  desc "Runs all the tests"
  lane :test do
    scan({ 
    	workspace: "PetrMazepa.xcworkspace",
    	scheme: "PetrMazepa", 
    	device: "iPhone 6s (9.2)",
    	clean: true,
    	code_coverage: true,
    	sdk: "iphonesimulator",
    	slack_only_on_failure: true
    	})
  end

  desc "Calculates test coverage and sends to Slack. Test should be runned before it"
  lane :report_test_coverage do
  	xcov({
    	workspace: "PetrMazepa.xcworkspace",
    	scheme: "PetrMazepa", 
    	output_directory: "xcov_output",
    	slack_url: ENV["SLACK_URL"]
  	})
  end

  lane :report_pr_test_passed do
  if ENV["SLACK_URL"]
    slack(
      message: "Pull Request could be merged without conflicts",
      success: true,
      default_payloads: [:test_result, :git_branch]
    )
    end  
  end

  lane :report_pr_tests_failed do
    if ENV["SLACK_URL"]
      slack(
        message: "Pull Request could NOT be merged",
        success: false,
        default_payloads: [:test_result, :git_branch]
      )
    end
  end  

  error do |lane, exception|
    if ENV["SLACK_URL"]
      slack(
        message: exception.to_s,
        success: false
      )
    end
  end

end